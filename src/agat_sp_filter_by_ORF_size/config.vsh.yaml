name: agat_sp_filter_by_ORF_size
description: |-
  The script reads a gff annotation file, and create two output files,
  one contains the gene models with ORF passing the test, the other contains the rest.
  By default the test is "> 100" that means all gene models that have ORF longer
  than 100 Amino acids, will pass the test.
  In the case of isoforms, the isoforms that do not pass the test are removed
  (If all isoforms are removed, the gene is removed).
  A gene with with any transcript having any CDS will be considered as non
  coding gene and will not be removed.
usage: |-
  agat_sp_filter_by_ORF_size.pl --gff infile.gff [ -o outfile ]
  agat_sp_filter_by_ORF_size.pl -h
links:
  homepage: https://agat.readthedocs.io
  documentation: https://agat.readthedocs.io/en/latest/tools/agat_sp_filter_by_ORF_size.html
  issue_tracker: https://github.com/NBISweden/AGAT/issues
  repository: https://github.com/NBISweden/AGAT
references:
  doi: 10.5281/zenodo.3552717
license: GPL-3.0
requirements:
  commands:
  - agat_sp_filter_by_ORF_size.pl
arguments:
- name: --gff
  type: file
  description: Input GTF/GFF file.
  required: true
  alternatives: -g
- name: --size
  type: integer
  description: ORF size to apply the test. Default 100.
  required: false
  alternatives: -s
- name: --test
  type: string
  description: Test to apply (> < = >= <=). If you us one of these two character >,
    <, please don't forget to quote you parameter like that "<=" otherwise your terminal
    will complain. By default it will be ">"
  required: true
  alternatives: -t
- name: --outfile
  type: file
  description: Output GFF file.  If no output file is specified, the output will be
    written to STDOUT.
  required: true
  alternatives:
  - -o
  - --out
  - --output
  direction: output
- name: --config
  type: file
  description: 'String - Input agat config file. By default AGAT takes as input agat_config.yaml
    file from the working directory if any,  otherwise it takes the orignal agat_config.yaml
    shipped with AGAT. To get the agat_config.yaml locally type: "agat config --expose".
    The --config option gives you the possibility to use your own AGAT config file
    (located elsewhere or named differently).'
  required: false
  alternatives: -c
resources:
- type: bash_script
  path: script.sh
engines:
- type: docker
  image: quay.io/biocontainers/agat:1.4.2--pl5321hdfd78af_0
  setup:
  - type: docker
    run: 'agat --version | sed ''s/AGAT\s\(.*\)/agat: "\1"/'' > /var/software_versions.txt'
runners:
- type: executable
- type: nextflow
