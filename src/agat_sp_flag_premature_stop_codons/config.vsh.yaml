name: agat_sp_flag_premature_stop_codons
description: |-
  The script flags the mRNAs containing premature stop codons.
  It will add the attribute "pseudo" and the value will be the positions of all premature stop codons.
  Gene are flagged as pseudogene only if all the isoforms are pseudogenes. The attribute
  will also be "pseudo" but will not contains any location.
usage: |-
  agat_sp_flag_premature_stop_codons.pl --gff infile.gff --fasta infile.fa --out outfile
  agat_sp_flag_premature_stop_codons.pl --help
links:
  homepage: https://agat.readthedocs.io
  documentation: https://agat.readthedocs.io/en/latest/tools/agat_sp_flag_premature_stop_codons.html
  issue_tracker: https://github.com/NBISweden/AGAT/issues
  repository: https://github.com/NBISweden/AGAT
references:
  doi: 10.5281/zenodo.3552717
license: GPL-3.0
requirements:
  commands:
  - agat_sp_flag_premature_stop_codons.pl
arguments:
- name: -reffile
  type: file
  description: Input GTF/GFF file.
  required: true
  alternatives:
  - --gff
  - --ref
- name: --fasta
  type: file
  description: Imput fasta file.
  required: true
  alternatives:
  - -f
  - --fa
- name: --codon
  type: integer
  description: Codon table to use. [default 1]
  required: false
  alternatives:
  - --ct
  - --table
- name: --output
  type: file
  description: Output gff3 file where the result will be printed.
  required: true
  alternatives:
  - --out
  - -o
  direction: output
- name: --config
  type: file
  description: 'String - Input agat config file. By default AGAT takes as input agat_config.yaml
    file from the working directory if any,  otherwise it takes the orignal agat_config.yaml
    shipped with AGAT. To get the agat_config.yaml locally type: "agat config --expose".
    The --config option gives you the possibility to use your own AGAT config file
    (located elsewhere or named differently).'
  required: false
  alternatives: -c
resources:
- type: bash_script
  path: script.sh
engines:
- type: docker
  image: quay.io/biocontainers/agat:1.4.2--pl5321hdfd78af_0
  setup:
  - type: docker
    run: 'agat --version | sed ''s/AGAT\s\(.*\)/agat: "\1"/'' > /var/software_versions.txt'
runners:
- type: executable
- type: nextflow
