name: agat_sp_add_start_and_stop
description: |-
  The script adds start and stop codons when a CDS feature exists.
  The script looks at the nucleotide sequence and checks the presence of start and stop codons.
  The script works even if the start or stop codon are split over several CDS features.
usage: |-
  agat_sp_add_start_and_stop.pl.pl --gff infile.gff --fasta genome.fa --out outfile.gff
  agat_sp_add_start_and_stop.pl.pl --help
links:
  homepage: https://agat.readthedocs.io
  documentation: https://agat.readthedocs.io/en/latest/tools/agat_sp_add_start_and_stop.html
  issue_tracker: https://github.com/NBISweden/AGAT/issues
  repository: https://github.com/NBISweden/AGAT
references:
  doi: 10.5281/zenodo.3552717
license: GPL-3.0
requirements:
  commands:
  - agat_sp_add_start_and_stop.pl.pl
arguments:
- name: --gff
  type: file
  description: Input GTF/GFF file.
  required: yes
  alternatives:
  - -i
  - -g
- name: --fasta
  type: file
  description: Input fasta file. Needed to check that CDS sequences start by start
    codon and stop by stop codon.
  required: yes
  alternatives:
  - --fa
  - -f
- name: --codon
  type: integer
  description: Codon table to use. [default 1]
  required: no
  alternatives:
  - --ct
  - --table
- name: --output
  type: file
  description: Output gff file updated
  required: yes
  alternatives:
  - --out
  - -o
  direction: output
- name: --extend
  type: boolean_true
  description: Boolean - When no start/stop codon found, try to extend the CDS to
    meet the next start/stop codon in the sequence.
  alternatives: -e
- name: --na
  type: boolean_true
  description: Boolean - no iupac / no ambiguous, avoid usage of IUPAC. By default
    IUPAC is used that means, NNN is seen as start and/or stop codon.
  alternatives: --ni
- name: --verbose
  type: boolean_true
  description: Verbose for debugging purpose.
  alternatives: -v
- name: --config
  type: file
  description: 'String - Input agat config file. By default AGAT takes as input agat_config.yaml
    file from the working directory if any,  otherwise it takes the orignal agat_config.yaml
    shipped with AGAT. To get the agat_config.yaml locally type: "agat config --expose".
    The --config option gives you the possibility to use your own AGAT config file
    (located elsewhere or named differently).'
  required: no
  alternatives: -c
resources:
- type: bash_script
  path: script.sh
engines:
- type: docker
  image: quay.io/biocontainers/agat:1.4.2--pl5321hdfd78af_0
  setup:
  - type: docker
    run: 'agat --version | sed ''s/AGAT\s\(.*\)/agat: "\1"/'' > /var/software_versions.txt'
runners:
- type: executable
- type: nextflow
