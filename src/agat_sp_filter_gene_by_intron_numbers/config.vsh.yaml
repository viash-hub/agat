name: agat_sp_filter_gene_by_intron_numbers
description: |-
  The script aims to filter genes by intron numbers.
  It will create two files. one with the genes passing the intron number filter,
  the other one with the remaining genes.

  Some examples:
  Select intronless genes:
  agat_sp_filter_gene_by_intron_numbers.pl --gff infile.gff -o result.gff
  Select genes with more or equal 10 introns:
  agat_sp_filter_gene_by_intron_numbers.pl --gff infile.gff --test ">=" --nb 10 [ --output outfile ]
usage: |-
  agat_sp_filter_gene_by_intron_numbers.pl --gff infile.gff --test ">=" --nb 10 [ --output outfile ]
  agat_sp_filter_gene_by_intron_numbers.pl --help
links:
  homepage: https://agat.readthedocs.io
  documentation: https://agat.readthedocs.io/en/latest/tools/agat_sp_filter_gene_by_intron_numbers.html
  issue_tracker: https://github.com/NBISweden/AGAT/issues
  repository: https://github.com/NBISweden/AGAT
references:
  doi: 10.5281/zenodo.3552717
license: GPL-3.0
requirements:
  commands:
  - agat_sp_filter_gene_by_intron_numbers.pl
arguments:
- name: --reffile
  type: file
  description: Input GFF3 file that will be read
  required: yes
  alternatives:
  - -f
  - --gff
  - -ref
- name: --number
  type: integer
  description: Integer - Number of introns [Default 0]
  required: no
  alternatives:
  - -n
  - --nb
- name: --test
  type: string
  description: Test to apply (>, <, =, >= or <=). If you use one of these two characters
    >, <, please do not forget to quote your parameter like that "<=". Else your terminal
    will complain. [Default "="]
  required: no
  alternatives: -t
- name: --output
  type: file
  description: Output GFF file.  If no output file is specified, the output will be
    written to STDOUT.
  required: yes
  alternatives: -o
  direction: output
- name: --config
  type: file
  description: 'String - Input agat config file. By default AGAT takes as input agat_config.yaml
    file from the working directory if any,  otherwise it takes the orignal agat_config.yaml
    shipped with AGAT. To get the agat_config.yaml locally type: "agat config --expose".
    The --config option gives you the possibility to use your own AGAT config file
    (located elsewhere or named differently).'
  required: no
  alternatives: -c
resources:
- type: bash_script
  path: script.sh
engines:
- type: docker
  image: quay.io/biocontainers/agat:1.4.2--pl5321hdfd78af_0
  setup:
  - type: docker
    run: 'agat --version | sed ''s/AGAT\s\(.*\)/agat: "\1"/'' > /var/software_versions.txt'
runners:
- type: executable
- type: nextflow
