name: agat_sp_compare_two_annotations
description: |-
  The script aims to compare two annotation of the same assembly. It provided
  information about split/fusion of genes between the two annotations.
  The most common cases are:
  1 => 0 ( gene uniq to file1)
  0 => 1 ( gene uniq to file2)
  1 => 1 ( 1 gene from file 1 overlaps only 1 gene from file2)
  1 => <many> ( 1 gene from file 1 overlaps <many> genes from file2) => split case (with file 1 as reference)
  <many> => 1 ( <many> genes from file 1 overlap only 1 gene from file2) => fusion case (with file 1 as reference)

  Then you can get more complex cases:
  <many> => <many>  (<many> genes from file 1 overlap <many> genes from file2)

  The script output a folder containing a report of number of different cases as well as a file
  per case type listing per line the gene feature's ID involved in each case.
usage: |-
  agat_sp_compare_two_annotations.pl -gff1 infile1.gff -gff2 infile2.gff  [ -o outfile ]
  agat_sp_compare_two_annotations.pl --help
links:
  homepage: https://agat.readthedocs.io
  documentation: https://agat.readthedocs.io/en/latest/tools/agat_sp_compare_two_annotations.html
  issue_tracker: https://github.com/NBISweden/AGAT/issues
  repository: https://github.com/NBISweden/AGAT
references:
  doi: 10.5281/zenodo.3552717
license: GPL-3.0
requirements:
  commands:
  - agat_sp_compare_two_annotations.pl
arguments:
- name: --gff1
  type: file
  description: Input GTF/GFF file1.
  required: true
- name: --gff2
  type: file
  description: Input GTF/GFF file2.
  required: true
- name: --output
  type: file
  description: Output folder.  It contains a report that resume the type and number
    of cases, as well as a file per case type  containing one case per line with the
    list of gene feature's ID (or other type of feature level1) from file1 then file2
    separated by a |.
  required: true
  alternatives:
  - -o
  - --out
  direction: output
- name: --debug
  type: boolean_true
  description: Debug option, make it easier to follow what is going on for debugging
    purpose.
  alternatives: -d
- name: --verbose
  type: boolean_true
  description: Verbose option, make it easier to follow what is going on.
  alternatives: -v
- name: --config
  type: file
  description: 'String - Input agat config file. By default AGAT takes as input agat_config.yaml
    file from the working directory if any,  otherwise it takes the orignal agat_config.yaml
    shipped with AGAT. To get the agat_config.yaml locally type: "agat config --expose".
    The --config option gives you the possibility to use your own AGAT config file
    (located elsewhere or named differently).'
  required: false
  alternatives: -c
resources:
- type: bash_script
  path: script.sh
engines:
- type: docker
  image: quay.io/biocontainers/agat:1.4.2--pl5321hdfd78af_0
  setup:
  - type: docker
    run: 'agat --version | sed ''s/AGAT\s\(.*\)/agat: "\1"/'' > /var/software_versions.txt'
runners:
- type: executable
- type: nextflow
